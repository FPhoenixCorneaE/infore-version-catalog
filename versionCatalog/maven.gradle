apply plugin: 'maven-publish'

// def定义的变量才会在project中
def POM_NAME = 'version-catalog'

def POM_VERSION = '1.1.2'

def POM_ARTIFACTID = "version-catalog"//项目名称id

def POM_GROUPID = 'com.infore.robot' //项目组id

def POM_DESCRIPTION = 'version-catalog'

def NEXUS_USERNAME = 'ir-android'  //用户名

def NEXUS_PASSWORD = 'ir-android2022' //密码

def NEXUS_REPOSITORY_URL = 'http://nexus.infore-robotics.cn/repository/android_local/' //repository的URL

publishing {
    publications {
        mavenAar(MavenPublication) {
            artifactId = POM_ARTIFACTID
            from components.versionCatalog
            pom {
                name = POM_NAME
                version = POM_VERSION
                group = POM_GROUPID
                description = POM_DESCRIPTION

                withXml {
                    //Creating additional node for dependencies
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Defining configuration names from which dependencies will be taken (debugCompile or releaseCompile and compile)
                    def configurationNames = ["implementation", 'api']

                    configurationNames.each { configurationName ->
                        configurations[configurationName].allDependencies.each {
                            if (it.group != null && it.name != null) {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)

                                //If there are any exclusions in dependency
                                if (it.excludeRules.size() > 0) {
                                    def exclusionsNode = dependencyNode.appendNode('exclusions')
                                    it.excludeRules.each { rule ->
                                        def exclusionNode = exclusionsNode.appendNode('exclusion')
                                        exclusionNode.appendNode('groupId', rule.group)
                                        exclusionNode.appendNode('artifactId', rule.module)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            allowInsecureProtocol true
            url = NEXUS_REPOSITORY_URL
            credentials {
                username NEXUS_USERNAME
                password NEXUS_PASSWORD
            }
        }
    }
}
